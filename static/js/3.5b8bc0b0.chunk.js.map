{"version":3,"sources":["components/molecules/modals/SettingsModal/index.jsx"],"names":["SETTINGS_TAB","name","icon","SettingsModal","React","Component","state","changeDetected","activeItemInnerPills","componentDidMount","platformData","this","props","globalState","fetchedUser","profile","user","data","enterData","first_name","firstName","last_name","lastName","email","showEmailPublic","settings","company","showCompanyPublic","website","websiteUrl","location","showLocalRanking","showTopLanguages","show3DDiagram","show2DDiagram","activeTheme","dataString","stringToHash","JSON","stringify","setState","checksum","initBlank","string","hash","length","i","charCodeAt","handleSelectChange","val","getChange","handleCheckChange","e","target","checked","handleTextChange","value","currentData","currentHash","toggleInnerPills","tab","save","saveSettings","closeModal","render","modalStyle","className","size","id","backdrop","isOpen","toggle","titleClass","tag","md","pills","color","map","key","link","to","active","onClick","type","duration","activeItem","tabId","onChange","placeholder","label","filled","containerClass","getValue","outline","selected","accessories","themes","tids","tid"],"mappings":"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","file":"static/js/3.5b8bc0b0.chunk.js","sourcesContent":["//#region > Imports\n//> React\n// Contains all the functionality necessary to define React components\nimport React from \"react\";\n//> MDB\n// \"Material Design for Bootstrap\" is a great UI design framework\nimport {\n  MDBBtn,\n  MDBIcon,\n  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBModalFooter,\n  MDBTabPane,\n  MDBTabContent,\n  MDBRow,\n  MDBCol,\n  MDBNav,\n  MDBNavLink,\n  MDBNavItem,\n  MDBInput,\n  MDBAnimation,\n  MDBSelect,\n  MDBSelectInput,\n  MDBSelectOption,\n  MDBSelectOptions,\n} from \"mdbreact\";\n\n//> CSS\nimport \"./settings.scss\";\n//#endregion\n\n//#region > Constant Variables\n//> Settings data\nconst SETTINGS_TAB = [\n  { name: \"Profile\", icon: \"\" },\n  { name: \"Customization\", icon: \"\" },\n  { name: \"Account\", icon: \"\" },\n  { name: \"Connections\", icon: \"\" },\n  { name: \"Blocked users\", icon: \"\" },\n  { name: \"Billing\", icon: \"\" },\n  { name: \"Security\", icon: \"\" },\n];\n//#endregion\n\n//#region > Components\n/** @class A settings modal component for displaying and editing user settings */\nclass SettingsModal extends React.Component {\n  state = {\n    changeDetected: false,\n    activeItemInnerPills: 0,\n  };\n\n  componentDidMount = () => {\n    // Check for the current values\n    const platformData = this.props.globalState?.fetchedUser?.platformData;\n\n    if (platformData?.profile && platformData?.user) {\n      const profile = platformData.profile;\n      const data = platformData.user;\n      const enterData = {\n        first_name: data.firstName ? data.firstName : \"\",\n        last_name: data.lastName ? data.lastName : \"\",\n        email: data.email ? data.email : \"\",\n        showEmailPublic: data.settings.showEmailPublic,\n        company: profile.company ? profile.company : \"\",\n        showCompanyPublic: data.settings.showCompanyPublic,\n        website: profile.websiteUrl ? profile.websiteUrl : \"\",\n        location: profile.location ? profile.location : \"\",\n        showLocalRanking: data.settings.showLocalRanking,\n        showTopLanguages: data.settings.showTopLanguages,\n        show3DDiagram: data.settings.show3DDiagram,\n        show2DDiagram: data.settings.show2DDiagram,\n        activeTheme: data.settings.activeTheme\n          ? data.settings.activeTheme\n          : null,\n      };\n\n      const dataString = this.stringToHash(JSON.stringify(enterData));\n\n      this.setState({\n        ...enterData,\n        checksum: dataString,\n      });\n    } else {\n      this.initBlank();\n    }\n  };\n\n  initBlank = () => {\n    this.setState({\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      showEmailPublic: true,\n      company: \"\",\n      showCompanyPublic: true,\n      website: \"\",\n      location: \"\",\n      showLocalRanking: true,\n      showTopLanguages: true,\n      show3DDiagram: true,\n      show2DDiagram: true,\n      activeTheme: null,\n    });\n  };\n\n  stringToHash = (string) => {\n    let hash = 0;\n\n    if (string.length == 0) return hash;\n\n    for (let i = 0; i < string.length; i++) {\n      let char = string.charCodeAt(i);\n\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash;\n    }\n\n    return hash;\n  };\n\n  handleSelectChange = (val) => {\n    this.setState(\n      {\n        activeTheme: val[0],\n      },\n      () => this.getChange()\n    );\n  };\n\n  handleCheckChange = (e) => {\n    this.setState(\n      {\n        [e.target.name]: e.target.checked,\n      },\n      () => this.getChange()\n    );\n  };\n\n  handleTextChange = (e) => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value,\n      },\n      () => this.getChange()\n    );\n  };\n\n  getChange = () => {\n    let currentData = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      email: this.state.email,\n      showEmailPublic: this.state.showEmailPublic,\n      company: this.state.company,\n      showCompanyPublic: this.state.showCompanyPublic,\n      website: this.state.website,\n      location: this.state.location,\n      showLocalRanking: this.state.showLocalRanking,\n      showTopLanguages: this.state.showTopLanguages,\n      show3DDiagram: this.state.show3DDiagram,\n      show2DDiagram: this.state.show2DDiagram,\n      activeTheme: this.state.activeTheme ? this.state.activeTheme : null,\n    };\n\n    // Get hash of current data\n    let currentHash = this.stringToHash(JSON.stringify(currentData));\n\n    if (this.state.changeDetected) {\n      if (this.state.checksum === currentHash) {\n        this.setState({\n          changeDetected: false,\n        });\n      }\n    } else {\n      if (this.state.checksum !== currentHash) {\n        this.setState({\n          changeDetected: true,\n        });\n      }\n    }\n  };\n\n  toggleInnerPills = (tab) => (e) => {\n    if (this.state.activeItemInnerPills !== tab) {\n      this.setState({\n        activeItemInnerPills: tab,\n      });\n    }\n  };\n\n  save = () => {\n    this.props.saveSettings(this.state);\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <MDBModal\n        modalStyle=\"white\"\n        className=\"text-dark\"\n        size=\"lg\"\n        id=\"settings\"\n        backdrop={true}\n        isOpen={true}\n        toggle={this.props.closeModal}\n      >\n        <MDBModalHeader\n          className=\"text-center text-dark donate\"\n          titleClass=\"w-100\"\n          tag=\"p\"\n        >\n          <MDBIcon icon=\"wrench\" className=\"green-text pr-2\" />\n          Settings\n        </MDBModalHeader>\n        <MDBModalBody className=\"text-center\">\n          <MDBRow>\n            <MDBCol md=\"4\">\n              <MDBNav pills color=\"primary\" className=\"flex-column\">\n                {SETTINGS_TAB.map((tab, i) => {\n                  return (\n                    <MDBNavItem key={i}>\n                      <MDBNavLink\n                        link\n                        to=\"#\"\n                        active={this.state.activeItemInnerPills === i}\n                        onClick={this.toggleInnerPills(i)}\n                      >\n                        {tab.name}\n                        {this.state.activeItemInnerPills === i &&\n                          tab.icon !== \"\" && (\n                            <MDBAnimation\n                              type=\"fadeInLeft\"\n                              className=\"d-inline-block\"\n                              duration=\"500ms\"\n                            >\n                              <MDBIcon icon={tab.icon} />\n                            </MDBAnimation>\n                          )}\n                      </MDBNavLink>\n                    </MDBNavItem>\n                  );\n                })}\n              </MDBNav>\n            </MDBCol>\n            <MDBCol md=\"8\">\n              <MDBTabContent activeItem={this.state.activeItemInnerPills}>\n                <MDBTabPane tabId={0}>\n                  <h5>Profile</h5>\n                  <div className=\"personal-data\">\n                    <p className=\"font-weight-bold\">Your full name</p>\n                    <MDBRow>\n                      <MDBCol md=\"6\">\n                        <input\n                          type=\"text\"\n                          name=\"first_name\"\n                          className=\"form-control\"\n                          onChange={this.handleTextChange}\n                          value={this.state.first_name}\n                          placeholder=\"Firstname\"\n                        />\n                      </MDBCol>\n                      <MDBCol md=\"6\">\n                        <input\n                          type=\"text\"\n                          name=\"last_name\"\n                          className=\"form-control\"\n                          onChange={this.handleTextChange}\n                          value={this.state.last_name}\n                          placeholder=\"Lastname\"\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <p className=\"font-weight-bold\">Public email</p>\n                    <MDBRow>\n                      <MDBCol md=\"12\">\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          className=\"form-control\"\n                          onChange={this.handleTextChange}\n                          value={this.state.email}\n                          placeholder=\"Email\"\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <MDBInput\n                      label={<p>Display email on profile</p>}\n                      filled\n                      type=\"checkbox\"\n                      id=\"checkbox0\"\n                      name=\"showEmailPublic\"\n                      onChange={this.handleCheckChange}\n                      checked={this.state.showEmailPublic}\n                      containerClass=\"mr-5\"\n                    />\n                    <p className=\"font-weight-bold\">Your workplace</p>\n                    <MDBRow>\n                      <MDBCol md=\"12\">\n                        <input\n                          type=\"text\"\n                          name=\"company\"\n                          className=\"form-control\"\n                          onChange={this.handleTextChange}\n                          value={this.state.company}\n                          placeholder=\"Company\"\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <small className=\"d-block\">\n                      You can @mention your company anywhere on SNEK\n                    </small>\n                    <MDBInput\n                      label={<p>Display company on profile</p>}\n                      filled\n                      type=\"checkbox\"\n                      id=\"checkbox1\"\n                      name=\"showCompanyPublic\"\n                      onChange={this.handleCheckChange}\n                      checked={this.state.showCompanyPublic}\n                      containerClass=\"mr-5\"\n                    />\n                    <p className=\"font-weight-bold\">Website</p>\n                    <MDBRow>\n                      <MDBCol md=\"12\">\n                        <input\n                          type=\"text\"\n                          name=\"website\"\n                          className=\"form-control\"\n                          onChange={this.handleTextChange}\n                          value={this.state.website}\n                          placeholder=\"Website URL\"\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <p className=\"font-weight-bold\">Location</p>\n                    <MDBRow>\n                      <MDBCol md=\"12\">\n                        <input\n                          type=\"text\"\n                          name=\"location\"\n                          className=\"form-control\"\n                          onChange={this.handleTextChange}\n                          value={this.state.location}\n                          placeholder=\"City, Country\"\n                        />\n                      </MDBCol>\n                    </MDBRow>\n                    <small className=\"d-block\">\n                      This can also assist us in finding you the best local\n                      matches\n                    </small>\n                  </div>\n                  <hr />\n                  <MDBRow>\n                    <MDBCol md=\"12\">\n                      <MDBInput\n                        label={<p>Show local ranking</p>}\n                        filled\n                        type=\"checkbox\"\n                        id=\"checkbox3\"\n                        name=\"showLocalRanking\"\n                        onChange={this.handleCheckChange}\n                        checked={this.state.showLocalRanking}\n                        containerClass=\"mr-5\"\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"12\">\n                      <MDBInput\n                        label={<p>Show top programming languages</p>}\n                        filled\n                        type=\"checkbox\"\n                        id=\"checkbox4\"\n                        name=\"showTopLanguages\"\n                        onChange={this.handleCheckChange}\n                        checked={this.state.showTopLanguages}\n                        containerClass=\"mr-5\"\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"12\">\n                      <hr />\n                    </MDBCol>\n                    <MDBCol md=\"12\">\n                      <MDBInput\n                        label={<p>Show 3D work activity diagram</p>}\n                        filled\n                        type=\"checkbox\"\n                        id=\"checkbox5\"\n                        name=\"show3DDiagram\"\n                        onChange={this.handleCheckChange}\n                        checked={this.state.show3DDiagram}\n                        containerClass=\"mr-5\"\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"12\">\n                      <MDBInput\n                        label={<p>Show 2D work activity diagram</p>}\n                        filled\n                        type=\"checkbox\"\n                        id=\"checkbox6\"\n                        name=\"show2DDiagram\"\n                        onChange={this.handleCheckChange}\n                        checked={this.state.show2DDiagram}\n                        containerClass=\"mr-5\"\n                      />\n                    </MDBCol>\n                  </MDBRow>\n                </MDBTabPane>\n                <MDBTabPane tabId={1}>\n                  <h5>Customization</h5>\n                  <div className=\"personal-data\">\n                    <p className=\"font-weight-bold\">Choose your theme</p>\n                    <MDBRow>\n                      <MDBCol md=\"12\">\n                        <MDBSelect getValue={this.handleSelectChange} outline>\n                          <MDBSelectInput\n                            selected={\n                              this.state.activeTheme\n                                ? this.state.activeTheme\n                                : \"Default\"\n                            }\n                          />\n                          <MDBSelectOptions>\n                            <MDBSelectOption value=\"\">Default</MDBSelectOption>\n                            {this.props.globalState.fetchedUser.accessories\n                              .themes &&\n                              this.props.globalState.fetchedUser.accessories.themes.tids.map(\n                                (tid, i) => {\n                                  let name = \"Unnamed\";\n                                  switch (tid) {\n                                    case \"9d88bda4657dcf17581ee91dfe6ab2a3\":\n                                      name = \"Alpha\";\n                                      break;\n                                    default:\n                                      name = \"Unnamed\";\n                                  }\n                                  name += \" Theme\";\n                                  return (\n                                    <MDBSelectOption key={i} value={tid}>\n                                      {tid}\n                                    </MDBSelectOption>\n                                  );\n                                }\n                              )}\n                          </MDBSelectOptions>\n                        </MDBSelect>\n                      </MDBCol>\n                    </MDBRow>\n                  </div>\n                </MDBTabPane>\n                <MDBTabPane tabId={2}>\n                  <h5>Panel 3</h5>\n                </MDBTabPane>\n              </MDBTabContent>\n            </MDBCol>\n          </MDBRow>\n        </MDBModalBody>\n        <MDBModalFooter className=\"text-right\">\n          {this.state.changeDetected && (\n            <MDBBtn color=\"green\" onClick={this.save}>\n              Save\n            </MDBBtn>\n          )}\n          <MDBBtn color=\"elegant\" outline onClick={this.props.closeModal}>\n            Close\n          </MDBBtn>\n        </MDBModalFooter>\n      </MDBModal>\n    );\n  }\n}\n//#endregion\n\n//#region > Exports\n//> Default Class\nexport default SettingsModal;\n//#endregion\n\n/**\n * SPDX-License-Identifier: (EUPL-1.2)\n * Copyright © 2019-2020 Simon Prast\n */\n"],"sourceRoot":""}